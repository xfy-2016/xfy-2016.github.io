webpackJsonp([1,0],[function(t,s,e){"use strict";function i(t){return t&&t.__esModule?t:{"default":t}}var a=e(10),c=i(a),n=e(9),l=i(n);new c["default"]({el:"body",components:{App:l["default"]}})},function(t,s,e){"use strict";function i(t){return t&&t.__esModule?t:{"default":t}}Object.defineProperty(s,"__esModule",{value:!0});var a=e(3),c=i(a),n="todos-vuejs";s["default"]={fetch:function(t){return JSON.parse(window.localStorage.getItem(n))||t},save:function(t){console.log("save"),window.localStorage.setItem(n,(0,c["default"])(t))}}},function(t,s,e){"use strict";function i(t){return t&&t.__esModule?t:{"default":t}}Object.defineProperty(s,"__esModule",{value:!0});var a=e(1),c=i(a);e(6),e(7),s["default"]={data:function(){return{editing:!1,currentCate:{},currentCateTable:"",currentTask:{},listtitle:"list-title",alltasks:"all-tasks",active:"active",isAllTaskActive:!1,message:"",cates:c["default"].fetch([{name:"默认分类",isDefault:!0,isActive:!1,childCate:[{name:"默认子分类",isActive:!0,tasks:[{name:"使用说明",isActive:!1,date:"2016-09-15",content:"基于vue.js开发的练习项目，数据将存储在浏览器本地存储;左侧为分类列表;中间为当前分类下的任务列表;右侧为任务详情;可以添加分类，添加任务，修改任务，以及给任务标记是否完成等功能",isFinished:!0}]}]},{name:"工作",isDefault:!1,isActive:!1,childCate:[{name:"前端",isActive:!1,tasks:[{name:"sass",isActive:!1,date:"2016-09-16",content:"学习sass",isFinished:!1},{name:"vue",isActive:!1,date:"2016-09-17",content:"学习vue.js",isFinished:!1}]}]}]),taskList:[{date:"2016-09-15",tasks:[{name:"使用说明",isActive:!1,date:"2016-09-15",content:"我是使用说明",isFinished:!0}]}],isCover:!1}},watch:{cates:{handler:function(t){c["default"].save(t)}},deep:!0},computed:{num:function(){for(var t=0,s=0;s<this.cates.length;s++)for(var e=0;e<this.cates[s].childCate.length;e++)t+=this.cates[s].childCate[e].tasks.length;return t}},methods:{toggleInit:function(){this.isAllTaskActive=!1;for(var t=0;t<this.cates.length;t++){this.cates[t].isActive=!1;for(var s=0;s<this.cates[t].childCate.length;s++)this.cates[t].childCate[s].isActive=!1}},allTask:function(){this.toggleInit(),this.isAllTaskActive=!0,this.createTaskList(this.queryAlltasks()),this.currentCateTable="AllCate",this.currentCate="",this.cleanAllActiveButton(),document.getElementById("all-tasks").className="active"},cateClick:function(t){this.toggleInit(),t.isActive=!0,this.createTaskList(this.queryTasksByCate(t)),this.currentCateTable="cate",this.currentCate=t,this.cleanAllActiveButton(),document.getElementById("all-tasks").className="active"},childClick:function(t){this.toggleInit(),t.isActive=!0,this.createTaskList(this.queryTasksByChildCate(t)),this.currentCateTable="childCate",this.currentCate=t,this.cleanAllActiveButton(),document.getElementById("all-tasks").className="active"},clickAddCate:function(){this.isCover=!0},cancel:function(){this.isCover=!1},ok:function(){var t=document.getElementById("modal-select"),s=t.selectedIndex;0===s?this.cates.push({name:this.message,isDefault:!1,isActive:!1,childCate:[]}):this.cates[s-1].childCate.push({name:this.message,isActive:!1,tasks:[]}),this.isCover=!1},queryAlltasks:function(){for(var t=[],s=0;s<this.cates.length;s++)for(var e=0;e<this.cates[s].childCate.length;e++)for(var i=0;i<this.cates[s].childCate[e].tasks.length;i++)t.push(this.cates[s].childCate[e].tasks[i]);return t},queryTasksByCate:function(t){for(var s=[],e=0;e<t.childCate.length;e++)for(var i=0;i<t.childCate[e].tasks.length;i++)s.push(t.childCate[e].tasks[i]);return s},queryTasksByChildCate:function(t){for(var s=[],e=0;e<t.tasks.length;e++)s.push(t.tasks[e]);return s},createTaskList:function(t){this.taskList=[];for(var s=0;s<t.length;s++)this.taskList.indexOf(t[s].date)==-1&&this.taskList.push({date:t[s].date,tasks:[]});this.taskList=this.taskList.sort(function(t,s){return new Date(t.date)-new Date(s.date)});for(var e=0;e<this.taskList.length;e++){for(var i=[],a=0;a<t.length;a++)t[a].date==this.taskList[e].date&&i.push(t[a]);this.taskList[e].tasks=i,console.log(this.taskList[e].tasks.length)}},cleanAllActiveButton:function(){document.getElementById("all-tasks").className="",document.getElementById("unfinish-tasks").className="",document.getElementById("finished-tasks").className=""},allTasksClick:function(){this.cleanAllActiveButton(),document.getElementById("all-tasks").className="active",this.taskListUpdate()},unfinishTaksClick:function(){this.cleanAllActiveButton(),document.getElementById("unfinish-tasks").className="active",this.taskListUpdate();for(var t=0;t<this.taskList.length;t++)this.taskList[t].tasks=this.taskList[t].tasks.filter(function(t,s,e){return!t.isFinished});this.taskList=this.taskList.filter(function(t,s,e){return 0!=t.tasks.length})},finishedTasksClick:function(){this.cleanAllActiveButton(),document.getElementById("finished-tasks").className="active",this.taskListUpdate();for(var t=0;t<this.taskList.length;t++)this.taskList[t].tasks=this.taskList[t].tasks.filter(function(t,s,e){return t.isFinished});this.taskList=this.taskList.filter(function(t,s,e){return 0!=t.tasks.length})},taskListUpdate:function(){"AllCate"==this.currentCateTable?this.createTaskList(this.queryAlltasks()):"cate"==this.currentCateTable?this.createTaskList(this.queryTasksByCate(this.currentCate)):"childCate"==this.currentCateTable&&this.createTaskList(this.queryTasksByChildCate(this.currentCate))},taskClick:function(t){this.currentTask=t,this.taskActiveInit(),t.isActive=!0},taskActiveInit:function(){for(var t=0;t<this.cates.length;t++)for(var s=0;s<this.cates[t].childCate.length;s++)for(var e=0;e<this.cates[t].childCate[s].tasks.length;e++)this.cates[t].childCate[s].tasks[e].isActive=!1},pencilClick:function(){this.editing=!0},saveClick:function(){this.editing=!1,c["default"].save(this.cates),this.taskListUpdate()},checkClick:function(){var t=confirm("是否将任务标记为已完成？");t&&(this.currentTask.isFinished=!0,c["default"].save(this.cates))},addTask:function(){this.currentTask={name:"",isActive:!1,date:"",content:"",isFinished:!1},this.editing=!0,"AllCate"==this.currentCateTable&&this.cates[0].childCate[0].tasks.push(this.currentTask)}},ready:function(){this.currentTask=this.cates[0].childCate[0].tasks[0],this.currentCateTable="AllCate",this.currentCate=this.cates[0].childCate[0],this.allTask(),console.log(this.currentTask)}}},,,,function(t,s){},function(t,s){},function(t,s){t.exports=' <div id=app> <div class=header> <h1>ToDo</h1> </div> <div class=main> <div class=left> <div v-bind:class="[listtitle, alltasks, isAllTaskActive ? active : \'\']" v-on:click=allTask> 所有任务 ({{num}}) </div> <div class=list-title>分类列表</div> <div id=listcontent class=list> <ul> <li v-for="cate in cates"> <h2 v-on:click=cateClick(cate) v-bind:class="{\'active\':cate.isActive}"><i class="fa fa-folder-open"></i><span>{{cate.name}}</span> ({{cate.childCate.length}})</h2> <ul> <li v-for="child in cate.childCate"> <h3 v-bind:class="{\'active\':child.isActive}" v-on:click=childClick(child)><i class="fa fa-file-o"></i><span>{{child.name}}</span> ({{child.tasks.length}})</h3> </li> </ul> </li> </ul> </div> <button class=add v-on:click=clickAddCate><i class="fa fa-plus"></i>新增分类</button> </div> <div class=mid> <div class=status> <button id=all-tasks class=active v-on:click=allTasksClick()>所有</button> <button id=unfinish-tasks class="" v-on:click=unfinishTaksClick()>未完成</button> <button id=finished-tasks class="" v-on:click=finishedTasksClick()>已完成</button> </div> <div id=task-list class=task-list> <div v-for="tasks in taskList"> <div>{{tasks.date}}</div> <ul> <li v-for="task in tasks.tasks" v-bind:class="{\'active\':task.isActive,\'task-done\':task.isFinished}" v-on:click=taskClick(task)><i class="fa fa-check" v-show=task.isFinished></i>{{task.name}}</li> </ul> </div> </div> <button class="add-task add" v-on:click=addTask()><i class="fa fa-plus"></i>新增任务</button> </div> <div class=right> <div class=title> <div class=todo-name v-show=!editing>{{currentTask.name}}</div> <div class=todo-name id=todoName v-show=editing><input type=text class=input-title placeholder=请输入标题 v-model=currentTask.name></div> <div class=manipulate> <a v-on:click=checkClick()><i class="fa fa-check-square-o"></i></a> <a v-on:click=pencilClick()><i class="fa fa-pencil-square-o"></i></a> </div> </div> <div class=task-date v-show=!editing> 任务日期：<span>{{currentTask.date}}</span> </div> <div class=task-date v-show=editing id=taskDate> 任务日期：<span><input type=date class=input-date v-model=currentTask.date></span> </div> <div class=content v-show=!editing> {{currentTask.content}} </div> <div class=content v-show=editing> <textarea class=textarea-content placeholder=请输入任务内容 id=textareaContent v-model=currentTask.content></textarea> </div> <div class=button-area v-show=editing> <span class=info></span> <button class=save v-on:click=saveClick()>保存</button> </div> </div> </div> <div class=cover v-show=isCover> <div class=modal> <div class=modal-head> 新增分类 </div> <div class=modal-body> 选择主分类： <select id=modal-select> <option>新增主分类</option> <option v-for="cate in cates">{{cate.name}}</option> </select> <br> 新分类名称： <input id=newCateName type=text v-model=message> </div> <div class=modal-foot> <button v-on:click=cancel>取消</button> <button v-on:click=ok>确认</button> </div> </div> </div> </div> '},function(t,s,e){var i,a;i=e(2),a=e(8),t.exports=i||{},t.exports.__esModule&&(t.exports=t.exports["default"]),a&&(("function"==typeof t.exports?t.exports.options||(t.exports.options={}):t.exports).template=a)}]);
//# sourceMappingURL=app.f715acc5b79f4bc191a5.js.map